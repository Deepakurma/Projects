{"ast":null,"code":"var _jsxFileName = \"/Users/deepakkurma/Documents/Projects/Practice-app/src/Formcomponents/input.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst inputreducer = (state, action) => {\n  switch (action.type) {\n    case 'change':\n      return {\n        ...state,\n        value: action.value\n      };\n    case 'touch':\n      return {\n        ...state,\n        istouched: true\n      };\n  }\n};\nconst Input = props => {\n  _s();\n  const Handlechange = event => {\n    dispatch({\n      type: 'change',\n      value: event.target.value\n    });\n  };\n  const touchhandler = () => {\n    dispatch({\n      type: 'touch'\n    });\n  };\n  const [inputstate, dispatch] = useReducer(inputreducer, {\n    value: props.intialValue,\n    istouched: false,\n    isvalid: props.intialValue || false\n  });\n  const elements = ( /*#__PURE__*/_jsxDEV(\"input\", {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: Handlechange,\n    onBlur: touchhandler,\n    value: inputstate.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n    id: props.id,\n    placeholder: props.placeholder,\n    onChange: Handlechange,\n    onBlur: touchhandler,\n    value: inputstate.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"c\",\n    children: [elements, !inputstate.isvalid && inputstate.istouched && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.errortext\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 60\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(Input, \"ZQJuSAvuauNabW73KMm3nZ5sSGk=\");\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useReducer","jsxDEV","_jsxDEV","inputreducer","state","action","type","value","istouched","Input","props","_s","Handlechange","event","dispatch","target","touchhandler","inputstate","intialValue","isvalid","elements","id","placeholder","onChange","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","className","children","errortext","_c","$RefreshReg$"],"sources":["/Users/deepakkurma/Documents/Projects/Practice-app/src/Formcomponents/input.js"],"sourcesContent":["import React, { useReducer } from \"react\";\n\n\nconst inputreducer = (state, action) => {\n    switch (action.type) {\n        case 'change':\n            return{\n                ...state,\n                value: action.value,\n            };\n        case 'touch':\n            return{\n                ...state,\n                istouched: true\n            }\n    }\n}\n\n\nconst Input = (props) => {\n\n    const Handlechange = event => {\n        dispatch({\n            type: 'change',\n            value: event.target.value\n        })\n    }\n\n    const touchhandler = () => {\n        dispatch({\n            type: 'touch'\n        })\n    }\n\n    const [inputstate, dispatch] = useReducer(inputreducer,{\n        value: props.intialValue,\n        istouched: false,\n        isvalid: props.intialValue || false\n    })\n\n  const elements =\n    ((\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={Handlechange}\n        onBlur={touchhandler}\n        value={inputstate.value}\n      />\n    ),\n    (\n      <textarea\n        id={props.id}\n        placeholder={props.placeholder}\n        onChange={Handlechange}\n        onBlur={touchhandler}\n        value={inputstate.value}\n      />\n    ));\n\n\n    return (\n        <div className=\"c\">\n           {elements}\n           {!inputstate.isvalid && inputstate.istouched && <p>{props.errortext}</p>}\n        </div>\n    )\n};\n\nexport default Input;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1C,MAAMC,YAAY,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACpC,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,QAAQ;MACT,OAAM;QACF,GAAGF,KAAK;QACRG,KAAK,EAAEF,MAAM,CAACE;MAClB,CAAC;IACL,KAAK,OAAO;MACR,OAAM;QACF,GAAGH,KAAK;QACRI,SAAS,EAAE;MACf,CAAC;EACT;AACJ,CAAC;AAGD,MAAMC,KAAK,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAErB,MAAMC,YAAY,GAAGC,KAAK,IAAI;IAC1BC,QAAQ,CAAC;MACLR,IAAI,EAAE,QAAQ;MACdC,KAAK,EAAEM,KAAK,CAACE,MAAM,CAACR;IACxB,CAAC,CAAC;EACN,CAAC;EAED,MAAMS,YAAY,GAAGA,CAAA,KAAM;IACvBF,QAAQ,CAAC;MACLR,IAAI,EAAE;IACV,CAAC,CAAC;EACN,CAAC;EAED,MAAM,CAACW,UAAU,EAAEH,QAAQ,CAAC,GAAGd,UAAU,CAACG,YAAY,EAAC;IACnDI,KAAK,EAAEG,KAAK,CAACQ,WAAW;IACxBV,SAAS,EAAE,KAAK;IAChBW,OAAO,EAAET,KAAK,CAACQ,WAAW,IAAI;EAClC,CAAC,CAAC;EAEJ,MAAME,QAAQ,IACX,cACClB,OAAA;IACEmB,EAAE,EAAEX,KAAK,CAACW,EAAG;IACbf,IAAI,EAAEI,KAAK,CAACJ,IAAK;IACjBgB,WAAW,EAAEZ,KAAK,CAACY,WAAY;IAC/BC,QAAQ,EAAEX,YAAa;IACvBY,MAAM,EAAER,YAAa;IACrBT,KAAK,EAAEU,UAAU,CAACV;EAAM;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC,eAGF1B,OAAA;IACEmB,EAAE,EAAEX,KAAK,CAACW,EAAG;IACbC,WAAW,EAAEZ,KAAK,CAACY,WAAY;IAC/BC,QAAQ,EAAEX,YAAa;IACvBY,MAAM,EAAER,YAAa;IACrBT,KAAK,EAAEU,UAAU,CAACV;EAAM;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CACF,CAAC;EAGF,oBACI1B,OAAA;IAAK2B,SAAS,EAAC,GAAG;IAAAC,QAAA,GACdV,QAAQ,EACR,CAACH,UAAU,CAACE,OAAO,IAAIF,UAAU,CAACT,SAAS,iBAAIN,OAAA;MAAA4B,QAAA,EAAIpB,KAAK,CAACqB;IAAS;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtE,CAAC;AAEd,CAAC;AAACjB,EAAA,CAjDIF,KAAK;AAAAuB,EAAA,GAALvB,KAAK;AAmDX,eAAeA,KAAK;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}