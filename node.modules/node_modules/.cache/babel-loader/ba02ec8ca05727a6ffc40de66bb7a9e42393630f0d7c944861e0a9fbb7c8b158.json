{"ast":null,"code":"var _jsxFileName = \"/Users/deepakkurma/Documents/React-mern-stack/src/App.js\",\n  _s = $RefreshSig$();\n// import { BrowserRouter as Router, Routes, Route,redirect } from \"react-router-dom\";\n// import User from \"./user/components/pages/user\";\n// // import Useritem from \"./user/components/useritem\";\n// // import MainNavigation from \"./shared/components/Navigation /MainNavigation\";\n// import MainNavigation from \"./shared/components/Navigation/MainNavigation\";\n// import UserPlaces from \"./places/components/pages/UserPlaces\";\n// import UpdatePlace from \"./places/components/pages/UpdatePlace\";\n// import Auth from \"./user/components/pages/Auth\";\n// import NewPlace from \"./places/components/pages/NewPlace\";\n// import { AuthContext } from \"./shared/components/Context/auth.context\";\n// import React, { useCallback, useLayoutEffect, useState, useSyncExternalStore } from \"react\";\n\n// const App = () => {\n//   const [isLogedIn, setisLogedIn] = useState(false);\n//   const login = useCallback(() => {\n//     setisLogedIn(true);\n//   },[]);\n//   const logout = useCallback(() => {\n//     setisLogedIn(false);\n//   },[]);\n\n//  let routes;\n\n//  if(isLogedIn) {\n//   routes = (\n//     <React.Fragment>\n//       <Routes>\n//       <Route path=\"/\" element={<User />} />\n//       <Route path=\"/:userId/places\" element={<UserPlaces />}></Route>\n//       <Route path=\"/places/new\" element={<NewPlace />}></Route>\n//       <Route path=\"/places/:placeId\" element={<UpdatePlace />}></Route>\n//       <redirect to=\"/auth\"/>\n//      </Routes>\n//     </React.Fragment>\n//   ); \n//  }else{\n//   routes = (\n//     <React.Fragment>\n//       <Routes>\n//       <Route path=\"/\" element={<User />} />\n//       <Route path=\"/:userId/places\" element={<UserPlaces />}></Route>\n//       <Route path=\"/auth\" element={<Auth />}></Route>\n//       <redirect to=\"/auth\"/>\n//      </Routes>\n//     </React.Fragment>\n//   );\n//  }\n\n//   return (\n//     <AuthContext.Provider value={{isLogedIn: isLogedIn, login: login, logout: logout}}>\n//       <Router>\n//         <MainNavigation />\n//         <main>\n//           {/* <Routes>\n//             <Route path=\"/\" element={<User />} />\n//             <Route path=\"/:userId/places\" element={<UserPlaces />}></Route>\n//             <Route path=\"/places/new\" element={<NewPlace />}></Route>\n//             <Route path=\"/places/:placeId\" element={<UpdatePlace />}></Route>\n//             <Route path=\"/auth\" element={<Auth />}></Route>\n//           </Routes> */}\n//           {routes}\n//         </main>\n//       </Router>\n//     </AuthContext.Provider>\n//   );\n// };\n\n// export default App;\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport User from \"./user/components/pages/user\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport UserPlaces from \"./places/components/pages/UserPlaces\";\nimport UpdatePlace from \"./places/components/pages/UpdatePlace\";\nimport Auth from \"./user/components/pages/Auth\";\nimport { AuthContext } from \"./shared/components/Context/auth.context\";\nimport React, { useCallback, useState } from \"react\";\nimport NewPlace from \"./places/components/pages/NewPlace\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isLogedIn, setisLogedIn] = useState(false);\n  const login = useCallback(() => {\n    setisLogedIn(true);\n  }, []);\n  const logout = useCallback(() => {\n    setisLogedIn(false);\n  }, []);\n  let routes;\n  if (isLogedIn) {\n    routes = /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/:userId/places\",\n        element: /*#__PURE__*/_jsxDEV(UserPlaces, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/places/new\",\n        element: /*#__PURE__*/_jsxDEV(NewPlace, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/places/:placeId\",\n        element: /*#__PURE__*/_jsxDEV(UpdatePlace, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/auth\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/auth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  } else {\n    routes = /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/:userId/places\",\n        element: /*#__PURE__*/_jsxDEV(UserPlaces, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/auth\",\n        element: /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/auth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLogedIn: isLogedIn,\n      login: login,\n      logout: logout\n    },\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(MainNavigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: routes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"RkageoXE0ww22/TE2JtEwPg5PwY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Routes","Route","Navigate","User","MainNavigation","UserPlaces","UpdatePlace","Auth","AuthContext","React","useCallback","useState","NewPlace","jsxDEV","_jsxDEV","App","_s","isLogedIn","setisLogedIn","login","logout","routes","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","to","Provider","value","_c","$RefreshReg$"],"sources":["/Users/deepakkurma/Documents/React-mern-stack/src/App.js"],"sourcesContent":["// import { BrowserRouter as Router, Routes, Route,redirect } from \"react-router-dom\";\n// import User from \"./user/components/pages/user\";\n// // import Useritem from \"./user/components/useritem\";\n// // import MainNavigation from \"./shared/components/Navigation /MainNavigation\";\n// import MainNavigation from \"./shared/components/Navigation/MainNavigation\";\n// import UserPlaces from \"./places/components/pages/UserPlaces\";\n// import UpdatePlace from \"./places/components/pages/UpdatePlace\";\n// import Auth from \"./user/components/pages/Auth\";\n// import NewPlace from \"./places/components/pages/NewPlace\";\n// import { AuthContext } from \"./shared/components/Context/auth.context\";\n// import React, { useCallback, useLayoutEffect, useState, useSyncExternalStore } from \"react\";\n\n// const App = () => {\n//   const [isLogedIn, setisLogedIn] = useState(false);\n//   const login = useCallback(() => {\n//     setisLogedIn(true);\n//   },[]);\n//   const logout = useCallback(() => {\n//     setisLogedIn(false);\n//   },[]);\n\n//  let routes;\n\n//  if(isLogedIn) {\n//   routes = (\n//     <React.Fragment>\n//       <Routes>\n//       <Route path=\"/\" element={<User />} />\n//       <Route path=\"/:userId/places\" element={<UserPlaces />}></Route>\n//       <Route path=\"/places/new\" element={<NewPlace />}></Route>\n//       <Route path=\"/places/:placeId\" element={<UpdatePlace />}></Route>\n//       <redirect to=\"/auth\"/>\n//      </Routes>\n//     </React.Fragment>\n//   ); \n//  }else{\n//   routes = (\n//     <React.Fragment>\n//       <Routes>\n//       <Route path=\"/\" element={<User />} />\n//       <Route path=\"/:userId/places\" element={<UserPlaces />}></Route>\n//       <Route path=\"/auth\" element={<Auth />}></Route>\n//       <redirect to=\"/auth\"/>\n//      </Routes>\n//     </React.Fragment>\n//   );\n//  }\n\n//   return (\n//     <AuthContext.Provider value={{isLogedIn: isLogedIn, login: login, logout: logout}}>\n//       <Router>\n//         <MainNavigation />\n//         <main>\n//           {/* <Routes>\n//             <Route path=\"/\" element={<User />} />\n//             <Route path=\"/:userId/places\" element={<UserPlaces />}></Route>\n//             <Route path=\"/places/new\" element={<NewPlace />}></Route>\n//             <Route path=\"/places/:placeId\" element={<UpdatePlace />}></Route>\n//             <Route path=\"/auth\" element={<Auth />}></Route>\n//           </Routes> */}\n//           {routes}\n//         </main>\n//       </Router>\n//     </AuthContext.Provider>\n//   );\n// };\n\n// export default App;\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport User from \"./user/components/pages/user\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport UserPlaces from \"./places/components/pages/UserPlaces\";\nimport UpdatePlace from \"./places/components/pages/UpdatePlace\";\nimport Auth from \"./user/components/pages/Auth\";\nimport { AuthContext } from \"./shared/components/Context/auth.context\";\nimport React, { useCallback, useState } from \"react\";\nimport NewPlace from \"./places/components/pages/NewPlace\";\n\nconst App = () => {\n  const [isLogedIn, setisLogedIn] = useState(false);\n\n  const login = useCallback(() => {\n    setisLogedIn(true);\n  }, []);\n\n  const logout = useCallback(() => {\n    setisLogedIn(false);\n  }, []);\n\n  let routes;\n\n  if (isLogedIn) {\n    routes = (\n      <Routes>\n        <Route path=\"/\" element={<User />} />\n        <Route path=\"/:userId/places\" element={<UserPlaces />} />\n        <Route path=\"/places/new\" element={<NewPlace />} />\n        <Route path=\"/places/:placeId\" element={<UpdatePlace />} />\n        <Route path=\"/auth\" element={<Navigate to=\"/auth\" />} />\n      </Routes>\n    );\n  } else {\n    routes = (\n      <Routes>\n        <Route path=\"/\" element={<User />} />\n        <Route path=\"/:userId/places\" element={<UserPlaces />} />\n        <Route path=\"/auth\" element={<Auth />} />\n        <Route path=\"*\" element={<Navigate to=\"/auth\" />} />\n      </Routes>\n    );\n  }\n\n  return (\n    <AuthContext.Provider value={{ isLogedIn: isLogedIn, login: login, logout: logout }}>\n      <Router>\n        <MainNavigation />\n        <main>\n          {routes}\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}