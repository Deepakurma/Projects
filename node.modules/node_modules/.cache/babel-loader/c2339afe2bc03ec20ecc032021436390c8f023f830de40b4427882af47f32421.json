{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useReducer } from \"react\";\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.input) if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid\n          }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\nexport const useForm = (intialInputs, initialFormValidity) => {\n  _s();\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: intialInputs,\n    isValid: initialFormValidity\n  });\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n  const setFormdata = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: \"SET_DATA\",\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n  return [formState, inputHandler, setFormdata];\n};\n_s(useForm, \"WDKjD49/VijTomOiDQmkuMWJBE0=\");\n;","map":{"version":3,"names":["useCallback","useReducer","formReducer","state","action","type","formIsValid","inputId","inputs","input","isValid","value","useForm","intialInputs","initialFormValidity","_s","formState","dispatch","inputHandler","id","setFormdata","inputData","formValidity"],"sources":["/Users/deepakkurma/Desktop/React-mern-stack/src/shared/hooks/from-hook.js"],"sourcesContent":["import { useCallback, useReducer } from \"react\";\n\nconst formReducer = (state, action) => {\n    switch (action.type) {\n      case \"INPUT_CHANGE\":\n        let formIsValid = true;\n        for (const inputId in state.inputs) {\n          if(!state.input)\n          if (inputId === action.inputId) {\n            formIsValid = formIsValid && action.isValid;\n          } else {\n            formIsValid = formIsValid && state.inputs[inputId].isValid;\n          }\n        }\n        return {\n          ...state,\n          inputs: {\n            ...state.inputs,\n            [action.inputId]: { value: action.value, isValid: action.isValid },\n          },\n          isValid: formIsValid,\n        };\n      case 'SET_DATA': \n          return{\n            inputs: action.inputs,\n            isValid: action.formIsValid\n          }\n      default:\n        return state;\n    }\n  };\n\n\nexport  const useForm = (intialInputs,initialFormValidity) => {\n    const [formState, dispatch] = useReducer(formReducer, {\n        inputs: intialInputs,\n        isValid: initialFormValidity,\n      });\n\n\n      const inputHandler = useCallback((id, value, isValid) => {\n        dispatch({\n          type: \"INPUT_CHANGE\",\n          value: value,\n          isValid: isValid,\n          inputId: id\n        });\n      }, []);\n\n      const setFormdata = useCallback((inputData, formValidity) => {\n        dispatch({\n          type: \"SET_DATA\",\n          inputs: inputData,\n          formIsValid: formValidity\n        })\n      }, []);\n\n      return [formState, inputHandler, setFormdata]\n};;\n\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,UAAU,QAAQ,OAAO;AAE/C,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACnC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,cAAc;MACjB,IAAIC,WAAW,GAAG,IAAI;MACtB,KAAK,MAAMC,OAAO,IAAIJ,KAAK,CAACK,MAAM,EAAE;QAClC,IAAG,CAACL,KAAK,CAACM,KAAK,EACf,IAAIF,OAAO,KAAKH,MAAM,CAACG,OAAO,EAAE;UAC9BD,WAAW,GAAGA,WAAW,IAAIF,MAAM,CAACM,OAAO;QAC7C,CAAC,MAAM;UACLJ,WAAW,GAAGA,WAAW,IAAIH,KAAK,CAACK,MAAM,CAACD,OAAO,CAAC,CAACG,OAAO;QAC5D;MACF;MACA,OAAO;QACL,GAAGP,KAAK;QACRK,MAAM,EAAE;UACN,GAAGL,KAAK,CAACK,MAAM;UACf,CAACJ,MAAM,CAACG,OAAO,GAAG;YAAEI,KAAK,EAAEP,MAAM,CAACO,KAAK;YAAED,OAAO,EAAEN,MAAM,CAACM;UAAQ;QACnE,CAAC;QACDA,OAAO,EAAEJ;MACX,CAAC;IACH,KAAK,UAAU;MACX,OAAM;QACJE,MAAM,EAAEJ,MAAM,CAACI,MAAM;QACrBE,OAAO,EAAEN,MAAM,CAACE;MAClB,CAAC;IACL;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;AAGH,OAAQ,MAAMS,OAAO,GAAGA,CAACC,YAAY,EAACC,mBAAmB,KAAK;EAAAC,EAAA;EAC1D,MAAM,CAACC,SAAS,EAAEC,QAAQ,CAAC,GAAGhB,UAAU,CAACC,WAAW,EAAE;IAClDM,MAAM,EAAEK,YAAY;IACpBH,OAAO,EAAEI;EACX,CAAC,CAAC;EAGF,MAAMI,YAAY,GAAGlB,WAAW,CAAC,CAACmB,EAAE,EAAER,KAAK,EAAED,OAAO,KAAK;IACvDO,QAAQ,CAAC;MACPZ,IAAI,EAAE,cAAc;MACpBM,KAAK,EAAEA,KAAK;MACZD,OAAO,EAAEA,OAAO;MAChBH,OAAO,EAAEY;IACX,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAGpB,WAAW,CAAC,CAACqB,SAAS,EAAEC,YAAY,KAAK;IAC3DL,QAAQ,CAAC;MACPZ,IAAI,EAAE,UAAU;MAChBG,MAAM,EAAEa,SAAS;MACjBf,WAAW,EAAEgB;IACf,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,CAACN,SAAS,EAAEE,YAAY,EAAEE,WAAW,CAAC;AACnD,CAAC;AAACL,EAAA,CAzBYH,OAAO;AAyBnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}