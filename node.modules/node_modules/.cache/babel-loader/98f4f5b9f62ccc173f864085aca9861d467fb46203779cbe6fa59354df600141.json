{"ast":null,"code":"var _s = $RefreshSig$();\n// import { useCallback, useReducer } from \"react\";\n\n// const formReducer = (state, action) => {\n//     switch (action.type) {\n//       case \"INPUT_CHANGE\":\n//         let formIsValid = true;\n//         for (const inputId in state.inputs) {\n//           if (inputId === action.inputId) {\n//             formIsValid = formIsValid && action.isValid;\n//           } else {\n//             formIsValid = formIsValid && state.inputs[inputId].isValid;\n//           }\n//         }\n//         return {\n//           ...state,\n//           inputs: {\n//             ...state.inputs,\n//             [action.inputId]: { value: action.value, isValid: action.isValid },\n//           },\n//           isValid: formIsValid,\n//         };\n//       case 'SET_DATA': \n//           return{\n//             inputs: action.inputs,\n//             isValid: action.formIsValid\n//           }\n//       default:\n//         return state;\n//     }\n//   };\n\n// export  const useForm = (intialInputs,initialFormValidity) => {\n//     const [formState, dispatch] = useReducer(formReducer, {\n//         inputs: intialInputs,\n//         isValid: initialFormValidity,\n//       });\n\n//       const inputHandler = useCallback((id, value, isValid) => {\n//         dispatch({\n//           type: \"INPUT_CHANGE\",\n//           value: value,\n//           isValid: isValid,\n//           inputId: id\n//         });\n//       }, []);\n\n//       const setFormdata = useCallback((inputData, formValidity) => {\n//         dispatch({\n//           type: \"SET_DATA\",\n//           inputs: inputData,\n//           formIsValid: formValidity\n//         })\n//       }, []);\n\n//       return [formState, inputHandler, setFormdata]\n// };;\n\nimport { useCallback, useReducer } from \"react\";\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          var _state$inputs$inputId;\n          formIsValid = formIsValid && ((_state$inputs$inputId = state.inputs[inputId]) === null || _state$inputs$inputId === void 0 ? void 0 : _state$inputs$inputId.isValid);\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid\n          }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\nexport const useForm = (initialInputs, initialFormValidity) => {\n  _s();\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      value,\n      isValid,\n      inputId: id\n    });\n  }, []);\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: \"SET_DATA\",\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n  return [formState, inputHandler, setFormData];\n};\n_s(useForm, \"epC4CuF7prGsftiivJhSx6iGADk=\");","map":{"version":3,"names":["useCallback","useReducer","formReducer","state","action","type","formIsValid","inputId","inputs","isValid","_state$inputs$inputId","value","useForm","initialInputs","initialFormValidity","_s","formState","dispatch","inputHandler","id","setFormData","inputData","formValidity"],"sources":["/Users/deepakkurma/Desktop/React-mern-stack/src/shared/hooks/from-hook.js"],"sourcesContent":["// import { useCallback, useReducer } from \"react\";\n\n// const formReducer = (state, action) => {\n//     switch (action.type) {\n//       case \"INPUT_CHANGE\":\n//         let formIsValid = true;\n//         for (const inputId in state.inputs) {\n//           if (inputId === action.inputId) {\n//             formIsValid = formIsValid && action.isValid;\n//           } else {\n//             formIsValid = formIsValid && state.inputs[inputId].isValid;\n//           }\n//         }\n//         return {\n//           ...state,\n//           inputs: {\n//             ...state.inputs,\n//             [action.inputId]: { value: action.value, isValid: action.isValid },\n//           },\n//           isValid: formIsValid,\n//         };\n//       case 'SET_DATA': \n//           return{\n//             inputs: action.inputs,\n//             isValid: action.formIsValid\n//           }\n//       default:\n//         return state;\n//     }\n//   };\n\n\n// export  const useForm = (intialInputs,initialFormValidity) => {\n//     const [formState, dispatch] = useReducer(formReducer, {\n//         inputs: intialInputs,\n//         isValid: initialFormValidity,\n//       });\n\n\n//       const inputHandler = useCallback((id, value, isValid) => {\n//         dispatch({\n//           type: \"INPUT_CHANGE\",\n//           value: value,\n//           isValid: isValid,\n//           inputId: id\n//         });\n//       }, []);\n\n//       const setFormdata = useCallback((inputData, formValidity) => {\n//         dispatch({\n//           type: \"SET_DATA\",\n//           inputs: inputData,\n//           formIsValid: formValidity\n//         })\n//       }, []);\n\n//       return [formState, inputHandler, setFormdata]\n// };;\n\nimport { useCallback, useReducer } from \"react\";\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId]?.isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid,\n      };\n    default:\n      return state;\n  }\n};\n\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity,\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      value,\n      isValid,\n      inputId: id,\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: \"SET_DATA\",\n      inputs: inputData,\n      formIsValid: formValidity,\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};\n  "],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,SAASA,WAAW,EAAEC,UAAU,QAAQ,OAAO;AAE/C,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACrC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,cAAc;MACjB,IAAIC,WAAW,GAAG,IAAI;MACtB,KAAK,MAAMC,OAAO,IAAIJ,KAAK,CAACK,MAAM,EAAE;QAClC,IAAID,OAAO,KAAKH,MAAM,CAACG,OAAO,EAAE;UAC9BD,WAAW,GAAGA,WAAW,IAAIF,MAAM,CAACK,OAAO;QAC7C,CAAC,MAAM;UAAA,IAAAC,qBAAA;UACLJ,WAAW,GAAGA,WAAW,MAAAI,qBAAA,GAAIP,KAAK,CAACK,MAAM,CAACD,OAAO,CAAC,cAAAG,qBAAA,uBAArBA,qBAAA,CAAuBD,OAAO;QAC7D;MACF;MACA,OAAO;QACL,GAAGN,KAAK;QACRK,MAAM,EAAE;UACN,GAAGL,KAAK,CAACK,MAAM;UACf,CAACJ,MAAM,CAACG,OAAO,GAAG;YAAEI,KAAK,EAAEP,MAAM,CAACO,KAAK;YAAEF,OAAO,EAAEL,MAAM,CAACK;UAAQ;QACnE,CAAC;QACDA,OAAO,EAAEH;MACX,CAAC;IACH,KAAK,UAAU;MACb,OAAO;QACLE,MAAM,EAAEJ,MAAM,CAACI,MAAM;QACrBC,OAAO,EAAEL,MAAM,CAACE;MAClB,CAAC;IACH;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;AAGD,OAAO,MAAMS,OAAO,GAAGA,CAACC,aAAa,EAAEC,mBAAmB,KAAK;EAAAC,EAAA;EAC7D,MAAM,CAACC,SAAS,EAAEC,QAAQ,CAAC,GAAGhB,UAAU,CAACC,WAAW,EAAE;IACpDM,MAAM,EAAEK,aAAa;IACrBJ,OAAO,EAAEK;EACX,CAAC,CAAC;EAEF,MAAMI,YAAY,GAAGlB,WAAW,CAAC,CAACmB,EAAE,EAAER,KAAK,EAAEF,OAAO,KAAK;IACvDQ,QAAQ,CAAC;MACPZ,IAAI,EAAE,cAAc;MACpBM,KAAK;MACLF,OAAO;MACPF,OAAO,EAAEY;IACX,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAGpB,WAAW,CAAC,CAACqB,SAAS,EAAEC,YAAY,KAAK;IAC3DL,QAAQ,CAAC;MACPZ,IAAI,EAAE,UAAU;MAChBG,MAAM,EAAEa,SAAS;MACjBf,WAAW,EAAEgB;IACf,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,CAACN,SAAS,EAAEE,YAAY,EAAEE,WAAW,CAAC;AAC/C,CAAC;AAACL,EAAA,CAxBWH,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}