{"ast":null,"code":"var _jsxFileName = \"/Users/deepakkurma/Desktop/React-mern-stack/src/places/components/pages/UpdatePlace.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Input from \"../../../shared/components/FormElements/Input\";\nimport Button from \"../../../shared/components/FormElements/Button\";\nimport { VALIDATOR_MAXLENGTH } from \"../../../shared/components/util/validators\";\n// import { validate } from \"../../../shared/components/util/validators\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdatePlace = () => {\n  _s();\n  const {\n    placeId\n  } = useParams();\n  const identifiedPlace = DUMMY_PLACES.find(p => p.id === placeId);\n  if (!identifiedPlace) {\n    /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Places not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      id: \"title\",\n      element: \"textarea\",\n      label: \"Description\",\n      validators: [VALIDATOR_MAXLENGTH(5)],\n      errorText: \"please enter a valid description.\"\n      // onInput={() = {}}\n      ,\n      value: identifiedPlace.title,\n      valid: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      disabled: true,\n      children: \"Update placeq\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdatePlace, \"kglc/ce70K/jI0UKC9kj8edkqug=\", false, function () {\n  return [useParams];\n});\n_c = UpdatePlace;\nexport default UpdatePlace;\nvar _c;\n$RefreshReg$(_c, \"UpdatePlace\");","map":{"version":3,"names":["React","useParams","Input","Button","VALIDATOR_MAXLENGTH","jsxDEV","_jsxDEV","UpdatePlace","_s","placeId","identifiedPlace","DUMMY_PLACES","find","p","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","element","label","validators","errorText","value","title","valid","type","disabled","_c","$RefreshReg$"],"sources":["/Users/deepakkurma/Desktop/React-mern-stack/src/places/components/pages/UpdatePlace.js"],"sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Input from \"../../../shared/components/FormElements/Input\";\nimport Button from \"../../../shared/components/FormElements/Button\";\nimport {\n    VALIDATOR_MAXLENGTH,\n} from \"../../../shared/components/util/validators\";\n// import { validate } from \"../../../shared/components/util/validators\";\n\nconst UpdatePlace = () => {\n  const {placeId} = useParams();\n\n  const identifiedPlace = DUMMY_PLACES.find((p) => p.id === placeId);\n\n  if (!identifiedPlace) {\n    <div className=\"center\">\n      <h2>Places not found</h2>\n    </div>;\n  }\n  return (\n    <form>\n      <Input\n        id=\"title\"\n        element=\"textarea\"\n        label=\"Description\"\n        validators={[VALIDATOR_MAXLENGTH(5)]}\n        errorText=\"please enter a valid description.\"\n        // onInput={() = {}}\n        value={identifiedPlace.title}\n        valid={true}\n      />\n      <Button type=\"submit\" disabled={true}>Update placeq</Button>\n    </form>\n  );\n};\n\nexport default UpdatePlace;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,+CAA+C;AACjE,OAAOC,MAAM,MAAM,gDAAgD;AACnE,SACIC,mBAAmB,QAChB,4CAA4C;AACnD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAACC;EAAO,CAAC,GAAGR,SAAS,CAAC,CAAC;EAE7B,MAAMS,eAAe,GAAGC,YAAY,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKL,OAAO,CAAC;EAElE,IAAI,CAACC,eAAe,EAAE;IACpB,aAAAJ,OAAA;MAAKS,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACrBV,OAAA;QAAAU,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EACR;EACA,oBACEd,OAAA;IAAAU,QAAA,gBACEV,OAAA,CAACJ,KAAK;MACJY,EAAE,EAAC,OAAO;MACVO,OAAO,EAAC,UAAU;MAClBC,KAAK,EAAC,aAAa;MACnBC,UAAU,EAAE,CAACnB,mBAAmB,CAAC,CAAC,CAAC,CAAE;MACrCoB,SAAS,EAAC;MACV;MAAA;MACAC,KAAK,EAAEf,eAAe,CAACgB,KAAM;MAC7BC,KAAK,EAAE;IAAK;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,eACFd,OAAA,CAACH,MAAM;MAACyB,IAAI,EAAC,QAAQ;MAACC,QAAQ,EAAE,IAAK;MAAAb,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEX,CAAC;AAACZ,EAAA,CAzBID,WAAW;EAAA,QACGN,SAAS;AAAA;AAAA6B,EAAA,GADvBvB,WAAW;AA2BjB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}